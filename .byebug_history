continue
warpedImage.width
warpedImage.height
continue
exit
dst.first.class
points.first.class
points.class
continue
exit
points[0].y
points[0].x
dst[0].y
dst[0].x
dst[0]
points
dst
exit
points
dst
exit
transform[1][0]
transform[0][1]
transform[0][10]
transform[0][0]
transform
exit
dst
points
exit
warpedImage.width
warpedImage.height
warpedImage
warpedImgae
exit
warpedImage.height
exit
image.width
image.height
maxWidth
maxHeight
warpedImage.width
warpedImage.height
exit
3.times do |i| 3.times do |j| puts transform[i][j] end end
3.times do |i|
transform[3][3]
transform[0][3]
transform[0][0]
transform.columns
transform.rows
exit
points.first
points.class
exit
points[3].y
points[3].x
points[2].x
points[1].y
points[1].x
dst[1]
transform
image
iamge
dst[0].y
dst[0].x
dst
dst[0]
maxHeight
points[0].y
points[0].x
points[0]
points
exit
maxWidth
maxHeight
exit
transform.first
transform
step
transform
points[2].y
points[2].x
points[1].y
points[1].x
points[0].y
points[0].x
exit
dst
points
transform
exit
topRightPoint.y
topRightPoint.t
topRightPoint.x
bottomLeftPoint.y
bottomLeftPoint.x
topLeftPoint.y
topLeftPoint.x.y
topLeftPoint.x
topLeftPoint
exit
sorted[3].y
sorted[2].y
sorted[2].x
sorted[4].x
sorted[3].x
sorted[3]/x
sorted[1].y
sorted[1].x
sorted[0].y
sorted[0].x
sorted
exit
approx.class
approx[1]
approx[0]
x.y
x.x
x
exit
x.v_next
x.next
x = approx.first
approx.second
approx.first
approx.each do |x| puts x end
approx.each do |x| puts x
approx.points
approx.next
approx.first
approx
exit
approx.size
exit
contour
continue
exit
approx.arc_length
box.width
box.height
exit
continue
win.show image
image.draw_contours!(approx,CvColor::White,CvColor::White,-1)
approx.size
aprrox.size
approx
approx=contours.approx_poly(:accuracy=>per)
per=per*0.3
per=per*.3
per = contours.arc_length
per = contours.cv_arc_length
per = contours.cv_arclength
continue
corners
exit
corners
exit
corners
exit
contours.contour_area
contours.h_next
contours
exit
contour.contour_area
contour.size
contour
approxPolyDP.size
approxPolyDP
exit
contour.first.x
continue
contour.contour_area
contour
exit
approxPolyDP.last.x
approxPolyDP.first.y
approxPolyDP.first.x
approxPolyDP.first
approxPolyDP
approxPolyDP.size
exit
contour.contour_area
approxPolyDP.size
continue
approxPolyDP.size
continue
approxPolyDP.size
continue
approxPolyDP.size
continue
approxPolyDP.size
continue
contour_array[0].contour_area
approxPolyDP.size
approxPolyDP
exit
contour_array[-1].contour_area
contour_array[-1]
contour_array[710].contour_area
contour_array[10].contour_area
contour_array[0].contour_area
contour_array[0]
approxPolyDP.size
approxPolyDP
continue
approxPolyDP.size()
approxPolyDP.size
approxPolyDP
continue
approxPolyDP.size
approxPolyDP
exit
contours
a.class
a
contours
exit
box_array
exit
box_array
box_area
exit
xit
box_array
exit
image.width
image.height
image.length
min_max_obj
boxArea
continue
boxArea
continue
boxArea
continue
boxArea
continue
boxArea
continue
boxArea
box_area
continue
boxArea
continue
contours.contour_area
contours
box.height
box.width
boxArea
next
min_max_obj
boxArea
continue
contours
