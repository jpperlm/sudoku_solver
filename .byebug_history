exit
continue
boxes
exit
contours.contour_area
box.width
box.height
box
continue
next
box
next
areaMinMax[:min]
box.height*box.width
box.width
image.width
box.height
image.height
box
exit
box
contours.contour_area
box.width
box.height
box
exit
filtContoursImages
contours.size
contours
exit
contours
filtContoursImages
areaObj
boxes
exit
continue
next
exit
displayAllContoursOnImage(image,contours,win)
win = GUI::Window.new "abc"
displayAllContoursOnImage(image,contours,win)
win
exit
win = GUI::Window.new "test"
win.show image
contours.bounding_rect.width
contours.bounding_rect.size
contours.bounding_rect
countours.bounding_rect
contours.contour_area
next
contours.contour_area
next
contours.contour_area
contour.contour_area
next
image.height*image.height
image.width
image.height
image
images
contours.contour_area
contours
areaObj
filtContoursImages
next
filtContoursImages
next
filtContoursImages
boxes
exit
next
exit
next
exit
boxes[1].height
boxes[1].width
boxes[1]
boxes.length
boxes[0].width
boxes[0].height
a.height
continue
a.width
a.height
continue
image.width
image.height
a.width
a.length
a.height
a
exit
image.width
boxes[0].width
boxes[0].height
exit
boxes[0]exit
boxes[0]
box
exit
cvImage.width
cvImage.height
cvImage
exit
areaObj
exit
image.size.width
image.size.height
image.size
image.height
image.width
image.height
areaObj
boxes[0].width.height
boxes[0].width
boxes[0]
expandedBox.height
expandedBox.width
image.height
image.width
image
exit
expandedBox.size
expandedBox
exit
image_array[0]
image_array
exit
image_array[0]
next
image_array
continue
warpedImage.width
warpedImage.height
continue
exit
dst.first.class
points.first.class
points.class
continue
exit
points[0].y
points[0].x
dst[0].y
dst[0].x
dst[0]
points
dst
exit
points
dst
exit
transform[1][0]
transform[0][1]
transform[0][10]
transform[0][0]
transform
exit
dst
points
exit
warpedImage.width
warpedImage.height
warpedImage
warpedImgae
exit
warpedImage.height
exit
image.width
image.height
maxWidth
maxHeight
warpedImage.width
warpedImage.height
exit
3.times do |i| 3.times do |j| puts transform[i][j] end end
3.times do |i|
transform[3][3]
transform[0][3]
transform[0][0]
transform.columns
transform.rows
exit
points.first
points.class
exit
points[3].y
points[3].x
points[2].x
points[1].y
points[1].x
dst[1]
transform
image
iamge
dst[0].y
dst[0].x
dst
dst[0]
maxHeight
points[0].y
points[0].x
points[0]
points
exit
maxWidth
maxHeight
exit
transform.first
transform
step
transform
points[2].y
points[2].x
points[1].y
points[1].x
points[0].y
points[0].x
exit
dst
points
transform
exit
topRightPoint.y
topRightPoint.t
topRightPoint.x
bottomLeftPoint.y
bottomLeftPoint.x
topLeftPoint.y
topLeftPoint.x.y
topLeftPoint.x
topLeftPoint
exit
sorted[3].y
sorted[2].y
sorted[2].x
sorted[4].x
sorted[3].x
sorted[3]/x
sorted[1].y
sorted[1].x
sorted[0].y
sorted[0].x
sorted
exit
approx.class
approx[1]
approx[0]
x.y
x.x
x
exit
x.v_next
x.next
x = approx.first
