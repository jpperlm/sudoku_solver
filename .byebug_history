exit
@clonedArray
@formattedArray
exit
@clonedArray
@formattedArray
exit
returnArray[0].push(1)
returnArray[0]
puts i
puts num
step
puts arr
puts i
i
step
exit
@formattedArray
@clonedArray
exit
@formattedArray
@clonedArray
exit
@formattedArray
next
continue
step
continue
step
image
step
images
next
image_array
exit
images+"hi"
images
exit
edit
contours.
contours.all
contours.h_next
contours.next
contours
exit
boxArea
continue
boxArea
continue
boxArea
continue
boxArea
continue
boxArea
boxAre
exit
next
continue
next
@outlined_board
next
@scaled_image
next
exit
@imagePath
@image_path
next
get_cv_image
exit
edit
image.imagePath
image
exit
x
exit
x
exit
returnArray
exit
returnArray
exit
returnArray
exit
returnArray
exit
array
exit
array1
next
exit
array[#"{x:y}"]
array["{x:y}"]
array[x:y]
y
x
next
exit
array
exit
ocrText2
exit
ocrText2
continue
ocrText2
exit
ocrText2
exit
ocrText
exit
continue
boxes
exit
contours.contour_area
box.width
box.height
box
continue
next
box
next
areaMinMax[:min]
box.height*box.width
box.width
image.width
box.height
image.height
box
exit
box
contours.contour_area
box.width
box.height
box
exit
filtContoursImages
contours.size
contours
exit
contours
filtContoursImages
areaObj
boxes
exit
continue
next
exit
displayAllContoursOnImage(image,contours,win)
win = GUI::Window.new "abc"
displayAllContoursOnImage(image,contours,win)
win
exit
win = GUI::Window.new "test"
win.show image
contours.bounding_rect.width
contours.bounding_rect.size
contours.bounding_rect
countours.bounding_rect
contours.contour_area
next
contours.contour_area
next
contours.contour_area
contour.contour_area
next
image.height*image.height
image.width
image.height
image
images
contours.contour_area
contours
areaObj
filtContoursImages
next
filtContoursImages
next
filtContoursImages
boxes
exit
next
exit
next
exit
boxes[1].height
boxes[1].width
boxes[1]
boxes.length
boxes[0].width
boxes[0].height
a.height
continue
a.width
a.height
continue
image.width
image.height
a.width
a.length
a.height
a
exit
image.width
boxes[0].width
boxes[0].height
exit
boxes[0]exit
boxes[0]
box
exit
cvImage.width
cvImage.height
cvImage
exit
areaObj
exit
image.size.width
image.size.height
image.size
image.height
image.width
image.height
areaObj
boxes[0].width.height
boxes[0].width
boxes[0]
expandedBox.height
expandedBox.width
image.height
image.width
image
exit
expandedBox.size
expandedBox
exit
image_array[0]
image_array
exit
image_array[0]
next
image_array
continue
warpedImage.width
warpedImage.height
continue
exit
dst.first.class
points.first.class
points.class
continue
exit
points[0].y
points[0].x
dst[0].y
dst[0].x
dst[0]
points
